{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","PeopleTable.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PeopleTable","people","selectedPerson","getPersonParent","parentName","find","person","name","isExistInTable","some","map","personName","classNames","slug","to","sex","born","died","motherName","fatherName","PeoplePage","useParams","App","useState","setPeople","isError","setIsError","loading","setLoading","useEffect","catch","role","isActive","end","length","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.194b5401.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from './types';\n\ninterface Props {\n  people: Person[];\n  selectedPerson: string;\n}\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedPerson,\n}) => {\n  const isSelected = (personName: Person) => personName.slug === selectedPerson;\n\n  const getPersonParent = (parentName: string | null) => {\n    return people.find(person => person.name === parentName);\n  };\n\n  const isExistInTable = (parentName: string | null) => {\n    return people.some(person => person.name === parentName);\n  };\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': isSelected(person),\n              })}\n            >\n              <td>\n                <Link\n                  to={`/people/${person.slug}`}\n                  className={classNames({\n                    'has-text-danger': person.sex === 'f',\n                  })}\n                >\n                  {person.name}\n                </Link>\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n\n              <td>\n                {isExistInTable(person.motherName) ? (\n                  <Link\n                    to={`/people/${getPersonParent(person.motherName)?.slug}`}\n                    className=\"has-text-danger\"\n                  >\n                    {person.motherName}\n                  </Link>\n                )\n                  : (\n                    <span>\n                      {person.motherName || '-'}\n                    </span>\n                  )}\n              </td>\n\n              <td>\n                {isExistInTable(person.fatherName) ? (\n                  <Link\n                    to={`/people/${getPersonParent(person.fatherName)?.slug}`}\n                  >\n                    {person.fatherName}\n                  </Link>\n                )\n                  : (\n                    <span>\n                      {person.fatherName || '-'}\n                    </span>\n                  )}\n              </td>\n\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport {\n  Navigate, NavLink, Route, Routes, useParams,\n} from 'react-router-dom';\nimport { getPeople } from './api';\nimport { Loader } from './components/Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from './types';\n\ninterface Props {\n  people: Person[];\n}\nexport const PeoplePage: React.FC<Props> = ({ people }) => {\n  const { slug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable people={people} selectedPerson={slug} />\n    </>\n  );\n};\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .then(() => setLoading(false))\n      .catch(() => {\n        setLoading(false);\n        setIsError(true);\n      });\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive })}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              end\n              to=\"/people\"\n              className={({ isActive }) => classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive })}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {loading && <Loader />}\n              {isError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {people.length === 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              ) }\n\n              <Routes>\n                <Route\n                  path=\"people\"\n\n                >\n                  <Route\n                    index\n                    element={<PeoplePage people={people} />}\n                  />\n                  <Route\n                    path=\":slug\"\n                    element={<PeoplePage people={people} />}\n                  />\n                </Route>\n\n                <Route\n                  path=\"/\"\n                  element={<h1 className=\"title\">Home Page</h1>}\n                />\n                <Route\n                  path=\"home\"\n                  element={<Navigate to=\"/\" replace />}\n                />\n\n                <Route\n                  path=\"*\"\n                  element={<h1 className=\"title\">Page not found</h1>}\n                />\n              </Routes>\n\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}